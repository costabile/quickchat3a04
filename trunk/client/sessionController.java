/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * sessionController.java
 *
 * Created on 1-Dec-2009, 1:43:39 PM
 */

package client;

/**
 *
 * @author Pyro Penguin
 */

import java.io.*;
import java.net.*;
import javax.swing.*;
import common.*;
import java.awt.*;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;

public class sessionController extends javax.swing.JFrame {

    public String target = "127.0.0.1";
    public int port = 1292;
    public String username;

    public boolean legit;
    public static boolean started = false;
    public static String[] tabs;
    public static int maxtabs = 10;
    public static int opentabs = 0;

    private static Socket mConnection = null;
    public ServerConnection mainConnect = null;


    private static Thread main;
    // UI STUFF

    protected static JTextArea consoleArea;
    protected static JTextArea lobbyArea;
    private final static String newline = "\n";

    

    /** Creates new form sessionController */
    public sessionController() {
        initComponents();
        started = true;
        
    }



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        entry = new javax.swing.JTextField();
        chatView = new javax.swing.JTabbedPane();
        sendBtn = new javax.swing.JButton();
        scrollPane1 = new java.awt.ScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        userList = new javax.swing.JList();
        label1 = new java.awt.Label();
        jLabel1 = new javax.swing.JLabel();
        scrollPane2 = new java.awt.ScrollPane();
        jLabel2 = new javax.swing.JLabel();
        stateLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        servBtn = new javax.swing.JButton();
        dcBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        entry.setName("entry"); // NOI18N
        entry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entryActionPerformed(evt);
            }
        });
        entry.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                entryKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                entryKeyTyped(evt);
            }
        });

        chatView.setName("chatView"); // NOI18N

        sendBtn.setText("send");
        sendBtn.setFocusCycleRoot(true);
        sendBtn.setName("sendBtn"); // NOI18N
        sendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendBtnActionPerformed(evt);
            }
        });
        sendBtn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sendBtnKeyPressed(evt);
            }
        });

        scrollPane1.setName("scrollPane1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        userList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Null" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        userList.setName("userList"); // NOI18N
        jScrollPane1.setViewportView(userList);

        scrollPane1.add(jScrollPane1);

        label1.setName("onlinelabel"); // NOI18N
        label1.setText("Online Users");

        jLabel1.setText("Friends");
        jLabel1.setName("jLabel1"); // NOI18N

        scrollPane2.setName("scrollPane2"); // NOI18N

        jLabel2.setText("STATUS:");
        jLabel2.setName("jLabel2"); // NOI18N

        stateLabel.setForeground(new java.awt.Color(255, 0, 51));
        stateLabel.setText("Disconnected");
        stateLabel.setName("stateLabel"); // NOI18N

        jLabel3.setText("Simple layout test");
        jLabel3.setName("jLabel3"); // NOI18N

        jButton1.setText("Settings");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        servBtn.setText("Connect to Server");
        servBtn.setName("servBtn"); // NOI18N
        servBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                servBtnActionPerformed(evt);
            }
        });

        dcBtn.setText("Disconnect");
        dcBtn.setName("dcBtn"); // NOI18N
        dcBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dcBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(entry)
                                .addComponent(chatView, javax.swing.GroupLayout.DEFAULT_SIZE, 709, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(servBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(stateLabel)
                                .addGap(18, 18, 18)
                                .addComponent(dcBtn)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(sendBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                            .addComponent(scrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                            .addComponent(scrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                            .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(chatView, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sendBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(entry, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(servBtn)
                    .addComponent(jLabel2)
                    .addComponent(stateLabel)
                    .addComponent(dcBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void entryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entryActionPerformed

       
    }//GEN-LAST:event_entryActionPerformed

//    public void connect(String password) {
//        try {
//
//        InetAddress address = InetAddress.getByName(target);
//        mConnection = new Socket(target, port);
//
//        mainConnect = new ServerConnection(mConnection);
//        main = new Thread((Runnable) mainConnect);
//        main.start();
//
//        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
//
//        NetworkMessage lmsg = new NetworkMessage(NetworkMessage.NetworkAction.LOGIN,new String[] {username, password });
//        mainConnect.sendNetworkMsg(lmsg);
//
//        stateLabel.setText("Connected");
//        stateLabel.setForeground(Color.green);
//        consoleWrite("Connection to the Server Confirmed!");
//        consoleWrite("Username: " + username);
//        consoleWrite("Password: *****");
//        consoleWrite("IP: " + target);
//        consoleWrite("Port: " + port);
//        consoleWrite("-> Joining Lobby...");
//        joinLobby();
//        authButton.setEnabled(false);
//        sendBtn.setEnabled(true);
//        loginIP.setEnabled(false);
//        loginName.setEnabled(false);
//        loginPassword.setEnabled(false);
//        loginPort.setEnabled(false);
//        }
//        catch(Exception e) {
//        System.out.print("Error");
//        JFrame frame = new JFrame("DialogDemo");
//        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
//        JOptionPane.showMessageDialog(frame,
//        "The server did not respond. Please check your settings.",
//        "Connect Failed",
//        JOptionPane.ERROR_MESSAGE);
//
//
//    }
//    }

    public static void disconnect(){
        
        try{
            mConnection = null;
            main.interrupt();
            stateLabel.setText("Disconnected");
            stateLabel.setForeground(Color.red);
            servBtn.setEnabled(true);
            consoleWrite("Disconnected from server!");
            sendBtn.setEnabled(false);
        }
        catch(Exception e) {
        System.out.print("Error");
    }
    }
    
    private void sendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendBtnActionPerformed
     sendMessage();

    }//GEN-LAST:event_sendBtnActionPerformed

    private void sendBtnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sendBtnKeyPressed
        
    }//GEN-LAST:event_sendBtnKeyPressed

    private void entryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_entryKeyPressed
       int charcode = evt.getKeyCode();
       if (charcode == 10)
       {sendMessage();}
    }//GEN-LAST:event_entryKeyPressed

    private void entryKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_entryKeyTyped
       
    }//GEN-LAST:event_entryKeyTyped

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
       
    }//GEN-LAST:event_formKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        settingsWindow.settings();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void servBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_servBtnActionPerformed
        //loginWindow.login();


    }//GEN-LAST:event_servBtnActionPerformed

    private void dcBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dcBtnActionPerformed
        disconnect();
    }//GEN-LAST:event_dcBtnActionPerformed



    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new sessionController().setVisible(false);
                build();

            }
        });
    }


    public void sendMessage(){
        String txtmsg = entry.getText();
        entry.setText(null);
        NetworkMessage gmsg = new NetworkMessage(NetworkMessage.NetworkAction.IM,new String[] {username, txtmsg });
        mainConnect.sendNetworkMsg(gmsg);
        consoleWrite("Message Sent!");
        lobbyWrite("You: " + txtmsg);
    }

    private static void log(){
    }

    private static void build() {
        // marker for initial
                sendBtn.setEnabled(false);
                tabs = new String[maxtabs];
                tabs[0] = "Console";
                opentabs = 0;
                String title = tabs[0];
                consoleArea = new JTextArea(5, 20);
                consoleArea.setEditable(false);
                Insets insets = new Insets(5,5,5,5);
                consoleArea.setMargin(insets);
                JScrollPane consolePane = new JScrollPane(consoleArea);
                JComponent console = makeTextPanel(title);
                chatView.addTab(title, consolePane);
                consolePane.setBackground(Color.white);
                //chatView.setTabComponentAt(0,
                // new ButtonTabComponent(chatView));

                consoleWrite("Program Initialized...");
                consoleWrite("----------------------");




    }

    public static void consoleWrite(String a) {
        String text = a;
        consoleArea.append(text + newline);

    }
    
   
//
//    private static void buildPane(String pane) {
//        // marker for initial
//                tabs[0] = "Console";
//                consoleArea = new JTextArea(5, 20);
//                consoleArea.setEditable(false);
//                Insets insets = new Insets(5,5,5,5);
//                consoleArea.setMargin(insets);
//                JScrollPane consolePane = new JScrollPane(consoleArea);
//                JComponent console = makeTextPanel("Console");
//                chatView.addTab("Console", consolePane);
//                consolePane.setBackground(Color.white);
//                //chatView.setTabComponentAt(0,
//                // new ButtonTabComponent(chatView));
//
//                consoleWrite("Program Initialized...");
//                consoleWrite("----------------------");
//
//
//    }
   
//    private static void paneWrite(int x,String a) {
//        String text = a;
//        consoleArea.append(text + newline);
//
//    }


     public void announce(){
            stateLabel.setText("Connected");
            stateLabel.setForeground(Color.green);
            consoleWrite("Connection to the Server Confirmed!");
            consoleWrite("Username: " + username);
            consoleWrite("Password: *****");
            consoleWrite("IP: " + target);
            consoleWrite("Port: " + port);
            consoleWrite("-> Joining Lobby...");;
            servBtn.setEnabled(false);

    }

    public void joinLobby(){

                announce();
                tabs[1] = "Lobby";
                opentabs = opentabs + 1;
                String title = tabs[1];

                lobbyArea = new JTextArea(5, 20);
                lobbyArea.setEditable(false);
                Insets insets = new Insets(5,5,5,5);
                lobbyArea.setMargin(insets);
                JScrollPane lobbyPane = new JScrollPane(lobbyArea);
                JComponent lobby = makeTextPanel(title);
                chatView.addTab(title, lobbyPane);
                lobbyPane.setBackground(Color.white);
                chatView.setTabComponentAt(1,
                new ButtonTabComponent(chatView));
                chatView.setSelectedIndex(1);
                sendBtn.setEnabled(true);
                servBtn.setEnabled(false);
                dcBtn.setEnabled(true);
                lobbyWrite("Welcome to the server, please enjoy your stay!");
    }

   
    public static void lobbyWrite(String a) {
        String text = a;
        //pane.append(Color.red, String.valueOf(n)+' ');
        lobbyArea.append(/*Color.red , */String.valueOf(text) + "/n");

    }

    public static void usrlistUpdate(String[] list) {
        userList.setListData(list);
    }

    protected static JComponent makeTextPanel(String text) {
        JPanel name = new JPanel(false);
        name.setLayout(new GridLayout(1, 1));
        return name;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JTabbedPane chatView;
    public static javax.swing.JButton dcBtn;
    private javax.swing.JTextField entry;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Label label1;
    private java.awt.ScrollPane scrollPane1;
    private java.awt.ScrollPane scrollPane2;
    public static javax.swing.JButton sendBtn;
    public static javax.swing.JButton servBtn;
    public static javax.swing.JLabel stateLabel;
    private static javax.swing.JList userList;
    // End of variables declaration//GEN-END:variables

}
